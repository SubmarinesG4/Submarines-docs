########################
## APRIRE CON https://editor.swagger.io/
########################
openapi: 3.0.0
info:
  description: Traduzioni API
  version: "0.0.1"
  title: Traduzioni
  contact:
    email: submarines.g4@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: superadmin
    description: operazioni che possono essere eseguite da Zero12
  - name: admin
    description: operazioni che possono essere eseguite dagli admin del tenant
  - name: traduttori
    description: operazioni che possono essere eseguite dai traduttori
    
########################################################################################################
paths:
  /login:
    get:
      tags:
        - admin
        - superadmin
        - traduttori
      summary: searches inventory
      operationId: searchInventory
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses: #######DA FARE
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Traduzione'
        '400':
          description: bad input parameter
        
  /{NomeTenant}/translation:
    get:
        tags:
          - admin
          - superadmin
          - traduttori
        summary: ritorna la lista delle traduzioni in un determinato tenant
        operationId: getAllTranslations
        description: |
          ottenere la lista delle traduzioni in un determinato tenant
        parameters:
          - in: path
            name: NomeTenant
            description: ritorna la lista delle traduzioni in un determinato tenant
            required: true
            schema:
              type: string
        responses:
          '200':
            description: si ottiene una lista di traduzioni in particolare chiavetraduzione traduzionedefault
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Traduzione'
                  ## meta -> /tenant1/translation?page=2 
          '400':
            description: bad input parameter
            
            
  /{NomeTenant}/translation/{chiaveTraduzione}:
    get:
        tags:
          - admin
          - superadmin
          - traduttori
        summary: ritorna il dettaglio della traduzione
        operationId: getTranslation
        description: |
          ritorna il dettaglio della traduzione
        parameters:
          - in: path
            name: NomeTenant
            description: nome del tenant
            required: true
            schema:
              type: string
          - in: path
            name: chiaveTraduzione
            description: chiave traduzione
            required: true
            schema:
              type: string
        responses: #######DA FARE
          '200':
            description: search results matching criteria
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Traduzione'
          '400':
            description: bad input parameter
    put:
      tags:
          - admin
          - superadmin
          - traduttori
      summary: aggiungere una traduzione al tenant
      operationId: addTranslation
      description: aggiungere una traduzione al tenant
      parameters:
          - in: path
            name: NomeTenant
            description: nome del tenant
            required: true
            schema:
              type: string
          - in: path
            name: chiaveTraduzione
            description: chiave traduzione
            required: true
            schema:
              type: string
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody: #######DA FARE
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OggettoTraduzione'# faccio un oggetto con meno campi, solo quelli essenziali
        description: Inventory item to add
        
  /{NomeTenant}:
    get:
      tags:
        - traduttori
        - admin
        - superadmin
      summary: ottenere infomazioni specifiche del tenant
      operationId: getTenantInfo
      description: |
        ottenere infomazioni generali del tenant, si usa nella schermata delle informazioni riguradanti il tenant
      parameters:
        - in: path
          name: NomeTenant
          description: nome del tenant
          required: true
          schema:
            type: string
      responses: #######DA FARE
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf: ## utente deve vedere solo alcune cose... non i dettagli di altri utenti
                    - $ref: '#/components/schemas/TenantInfoGenerali'
                    - $ref: '#/components/schemas/TenantInfoSensibili'
        '400':
          description: bad input parameter
    
    
      
    put: ##creazione/modifica tenant
      tags:
        - superadmin
      summary: creazione e/o modifica di un tenant
      operationId: createTenant
      description: creazione e/o modifica di un tenant
      parameters:
        - in: path
          name: NomeTenant
          description: nome del tenant
          required: true
          schema:
            type: string
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody: 
        content:
          application/json:
            schema:
                items:
                  allOf: ## utente deve vedere solo alcune cose... non i dettagli di altri utenti
                    - $ref: '#/components/schemas/TenantInfoGenerali'
                    - $ref: '#/components/schemas/TenantInfoSensibili'
        description: Inventory item to add
        ## CHIEDERE SE FARE UNO SCHEMA SOLO PER LA PUT (SENZA INVIARE CAMPI VUOTI)
        
    delete:
      tags:
        - superadmin
      summary: cancellazione di un tenant
      operationId: deleteTenant
      description: cancellazione di un tenant
      parameters:
        - in: path
          name: NomeTenant
          description: nome del tenant
          required: true
          schema:
            type: string
      responses:
          '200':
            description: (OK)item deleted
          '404':
            description: object not found

  /{NomeTenant}/invite: ## invito traduttori nel tenant > cognito
    post:
      tags:
        - admin
        - superadmin
      summary: invito traduttori nel tenant
      operationId: inviteUser
      description: invito traduttori nel tenant
      parameters:
        - in: path
          name: NomeTenant
          description: nome del tenant
          required: true
          schema:
            type: string
      responses:
        '201':
          description: utente invitato
        '400':
          description: bad request
        
        
  /{NomeTenant}/user: ##crea un utente, possibile chiamata in cascata dopo la creazione del tenant eseguito solo dal supertenant
  ## CREAZIONE UTENTE ADMIN?????
    post:
      tags: 
        - superadmin
      summary: creazione utente, possibile chiamata in cascata dopo la creazione del tenant 
      operationId: createUser
      description: creazione utente, possibile chiamata in cascata dopo la creazione del tenant
      parameters:
        - in: path
          name: NomeTenant
          description: nome del tenant
          required: true
          schema:
            type: string
      responses:
        '201':
          description: utente creato
        '400':
          description: bad request      
            
    delete:
      tags:
        - admin
        - superadmin
      summary: eliminazione utente
      operationId: deleteUser
      description: eliminazione utente
      parameters:
        - in: path
          name: NomeTenant
          description: nome del tenant
          required: true
          schema:
            type: string
      responses:
          '200':
            description: (OK)item deleted
          '404':
            description: object not found 
  
    
        
  /Tenants:  ## lista di tutti i tenant visibili al super admin
    get:
      tags:
        - superadmin
      summary: ottenere lista di tutti i tenant
      operationId: getAllTenant
      description: |
        ottenere lista di tutti i tenant
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantInfoGenerali'
        '400':
          description: bad input parameter
      
   
          
################################################################################################
components:
  schemas:
    # oggetto traduzione (es: en:hi, it:ciao)
    OggettoTraduzione:
      type: object
      required: 
        - traduzione
      properties:
      # contiene tutte le lingue del tenant anche quelle che non hanno una traduzione
        traduzione:
          type: object
          additionalProperties:
            type: string
          example:
            en: Hello
            it: Ciao
            fr : 
        modificatodaUtente:
          type: string
          example: utente1
        dataCreazione:
          type: string
          example: 2023-05-02
        dataModifica:
          type: string
          example: 2023-06-02
        pubblicato:
          type: boolean
          example: false
          
        
    ## traduzione che viene visualizzata nella schermata generale(lista di traduzioni)
    Traduzione:
      type: object
      required:
        - keyTraduzione
        - traduzioneDefault
      properties:
        keyTraduzione:
          type: string
          example: trad1
        linguaTraduzioneDefault:
          type: string
          example: it  
        traduzioneinLinguaDefault:
          type: string
          example: ciao
        additionalProperties:
          anyOf:
            - $ref: '#/components/schemas/OggettoTraduzione' ## serve per riutilizzare l'oggetto traduzioni
            - $ref: '#/components/schemas/VersioniTraduzione'
    
    VersioniTraduzione:
      type: object
      properties:
        modificatodaUtente:
          type: string
          example: utente1
        dataModifica:
          type: string
        traduzioni:
          type: string
          example:
            en: Hello
            it: Ciao
    
    TenantInfoGenerali:
      type: object
      properties:
        nomeTenant:
          type: string
          example: tenant1
        numeroTraduzioniDisponibili:
          type: integer
          minimum: 0
        numeroTraduzioniUsate:
          type: integer
          minimum: 0
        linguaTraduzioneDefault:
          type: string
          example: it
        listaLingueDisponibili:
          type: array
          items:
            type: string
            example: ["it","en"]
        
    
    TenantInfoSensibili:
      type: object
      properties:
        token:
          type: string
        listaUserTenant:
          type: array
          items:
            $ref: '#/components/schemas/User'
    
    User:
      type: object
      properties:
        emailUtente:
          type: string
        username:
          type: string
        dataCreazioneUtente:
          type: string
    
    